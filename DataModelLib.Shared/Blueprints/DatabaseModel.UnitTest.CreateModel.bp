{{- func GetMockCount
	ret (($0.attributes | find "MockCountAttribute")?.parameters | find "Value")?.value??"5" | string.to_int
end }}

// <auto-generated/>
using System;
using System.Collections.Generic;
{{- for reference in project.references }}
using {{reference}};
{{-end}}




namespace {{class.namespace}}
{
	public partial class {{class.name}}
	{
		{{ for table in project.classes  | with_attribute "TableAttribute"}}
		{{- dtoAttribute = table.attributes | find "DTOAttribute"  }}
		{{- if dtoAttribute}}
		{{- mockCount = GetMockCount table }}

		{{- tableName=(dtoAttribute.parameters | find "Name").value }}
		#region {{tableName}} table
		
		[TestMethod]
		public void ShouldNotCreateUnique{{tableName}}Model()
		{
			Models.TestDatabaseModel testDatabaseModel;

			testDatabaseModel = new Models.TestDatabaseModel(MockDatabase.Create());
			// provided parameter should not be null
			Assert.ThrowsException<ArgumentNullException>(()=> testDatabaseModel.Create{{tableName}}Model(null));
		}
		[TestMethod]
		public void ShouldCreateUnique{{tableName}}Model()
		{
			Models.TestDatabaseModel testDatabaseModel;
			{{tableName}} new{{tableName}}1, new{{tableName}}2;
			Models.{{tableName}}Model model1, model2, model3;

			testDatabaseModel = new Models.TestDatabaseModel(MockDatabase.Create());
			new{{tableName}}1 = MockDatabase.Create{{tableName}}({{mockCount+1}});
			new{{tableName}}2 = MockDatabase.Create{{tableName}}({{mockCount+2}});
			
			// create a model from new{{tableName}}1 
			model1 = testDatabaseModel.Create{{tableName}}Model(new{{tableName}}1);
			// try to create another model from new{{tableName}}1 
			model2 = testDatabaseModel.Create{{tableName}}Model(new{{tableName}}1);
			// create a model from new{{tableName}}2
			model3 = testDatabaseModel.Create{{tableName}}Model(new{{tableName}}2);
			// model1 and model2 should be equal, because they were created from same item
			Assert.AreEqual(model1, model2);
			// model1 and model3 should not be equal, because they were not created from same item
			Assert.AreNotEqual(model1, model3);
			// model2 and model3 should not be equal, because they were not created from same item
			Assert.AreNotEqual(model2, model3);
		}
		
		#endregion
		{{- end }}
		{{end }}


	}
}
