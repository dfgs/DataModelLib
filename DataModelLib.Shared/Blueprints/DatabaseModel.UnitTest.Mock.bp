{{- func FindUnitTestClass

	for tmptable in project.classes  | with_attribute "TableAttribute"
		dtoAttribute = tmptable.attributes | find "DTOAttribute"
		if dtoAttribute
			tmptableName=(dtoAttribute.parameters | find "Name").value
			if tmptableName==$0 
				ret tmptable
			end
		end
	end

	ret nil
end }}

{{- func GetMockCount
	ret (($0.attributes | find "MockCountAttribute")?.parameters | find "Value")?.value??"5" | string.to_int
end }}

// <auto-generated/>
using System;
using System.Collections.Generic;


namespace {{class.namespace}}
{
	{{- dtoAttribute = class.attributes | find "DTOAttribute"  }}
	{{- if dtoAttribute}}
	{{- testedClass=(dtoAttribute.parameters | find "Name").value }}
	{{- else }}
	{{- testedClass="Undefined"}}
	{{- end }}

	public static class MockDatabase
	{
		public static {{testedClass}} Create()
		{
			{{testedClass}} testDatabase = new {{testedClass}}();

			{{ for table in project.classes  | with_attribute "TableAttribute"}}
			{{- dtoAttribute = table.attributes | find "DTOAttribute"  }}
			{{- if dtoAttribute}}
		
			{{- tableName=(dtoAttribute.parameters | find "Name").value }}
			#region Populate {{tableName}} table
			{{- mockCount = GetMockCount table }}
			{{- for index in 1..mockCount }}
			testDatabase.{{tableName}}Table.Add(
				new {{tableName}}()
				{
					{{- for property in table.properties}}
						{{- primaryTableName=((property.attributes | find "ForeignKey")?.parameters | find "PrimaryTable")?.value }}
						
						{{- if property.attributes | contains "PrimaryKey"}}
					{{property.name}} = {{index}}, // unique PK
						
						{{- else if primaryTableName}}
							{{- primaryTable = FindUnitTestClass primaryTableName }}
							
							{{- isNullable = property.is_nullable }}
							{{- primaryMockCount = GetMockCount primaryTable }}
							{{- if isNullable}}
								{{- primaryKeyIndex=(index-1) % (primaryMockCount+1) +1}}
								{{-if (primaryKeyIndex>primaryMockCount)}}
					{{property.name}} = null, // foreign property to table {{primaryTableName}}
								{{-else}}
					{{property.name}} = {{ primaryKeyIndex }}, // foreign property to table {{primaryTableName}}
								{{-end}}
							{{- else}}	
					{{property.name}} = {{ (index-1) % primaryMockCount +1}}, // foreign property to table {{primaryTableName}}
							{{- end}}
						{{- else if property.type_name=="string"}}
					{{property.name}} = "{{property.name}}{{index}}",
						
						{{-else}}
					{{property.name}} = {{index}},
						{{- end}}
					{{- end}}
				}
			);
			{{- end }}
			#endregion

			{{end }}
			{{- end }}

			
			return testDatabase;		
		}
		

		

	}
}