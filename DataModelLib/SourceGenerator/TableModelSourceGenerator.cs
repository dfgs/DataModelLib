using DataModelLib.Common.Schema;
using DataModelLib.Common.SourceGenerator;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using DataModelLib.Common;

namespace DataModelLib.SourceGenerator
{
	public class TableModelSourceGenerator : SourceGenerator<Table>
	{
		public override string GenerateSource(Table Table)
		{
			string source =
			$$"""
			// <auto-generated/>
			using System;
			using System.Collections.Generic;
			using System.Linq;
			using System.ComponentModel;

			namespace {{Table.Namespace}}
			{
				public partial class {{Table.TableName}}Model : INotifyPropertyChanged
				{
					public event PropertyChangedEventHandler PropertyChanged;

					private {{Table.TableName}} dataSource
					{
						get;
						set;
					}

					private {{Table.DatabaseName}}Model databaseModel;
			
			{{Table.Columns.Select(item => item.GenerateTableModelProperties()).Join().Indent(2)}}
			
					public {{Table.TableName}}Model({{Table.DatabaseName}}Model DatabaseModel, {{Table.TableName}} DataSource)
					{
						this.databaseModel=DatabaseModel;
						this.dataSource=DataSource;

						this.databaseModel.{{Table.TableName}}RowChanged += OnRowChanged;
					}
					
					private void OnRowChanged({{Table.TableName}} Item, string PropertyName, object OldValue, object NewValue)
					{
						if (Item==dataSource) OnPropertyChanged(PropertyName);
					}

					protected virtual void OnPropertyChanged(string PropertyName)
					{
						if( PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
					}

			{{this.GenerateMethods(Table).Indent(2)}}
				}
			}
			""";

			return source;
		}

		private string GenerateMethods(Table Table)
		{
			string source;

			if (Table.PrimaryKey == null)
			{
				source = $$"""
				{{ Table.Relations.Select(item => item.GenerateTableModelMethods(Table == item.PrimaryTable)).Join()}}
				""";
			}
			else
			{
				source = $$"""
				public void Delete()
				{
					this.databaseModel.Remove{{Table.TableName}}(this);
				}
				{{Table.Relations.Select(item => item.GenerateTableModelMethods(Table == item.PrimaryTable)).Join()}}
				""";
			}

			return source;
		}




	}
}
