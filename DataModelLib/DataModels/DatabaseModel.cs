using Microsoft.CodeAnalysis.CSharp.Syntax;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace DataModelLib.DataModels
{
	public class DatabaseModel : DataModel
	{


		public string Namespace
		{
			get;
			private set;
		}
		public string DatabaseClassName
		{
			get;
			private set;
		}

		public List<TableModel> TableModels
		{
			get;
			private set;
		}

		public DatabaseModel(string Namespace,string DatabaseClassName) : base()
		{
			TableModels = new List<TableModel>();
			this.Namespace = Namespace;this.DatabaseClassName = DatabaseClassName;
		}

		public string GenerateDatabaseClass()
		{
			string source =
			$$"""
			// <auto-generated/>
			using System;
			using System.Collections.Generic;
			{{string.Join("\r\n", TableModels.Select(item => $"using {item.Namespace};").Distinct())}}
			
			namespace {{Namespace}}
			{
				public partial class {{DatabaseClassName}}
				{
			{{string.Join("\r\n", TableModels.Select(item => item.GenerateDatabaseProperties())).Indent(2)}}

			{{this.GenerateDatabaseConstructor().Indent(2)}}
											
				}
			}
			""";

			return source;
		}

		public string GenerateDatabaseConstructor()
		{
			string source =
			$$"""
			public {{DatabaseClassName}}()
			{
			{{string.Join("\r\n", TableModels.Select(item => item.GenerateDatabaseConstructor())).Indent(1)}}
			}
			""";

			return source;
		}

		public string GenerateDatabaseModelClass()
		{
			string source =
			$$"""
			// <auto-generated/>
			using System;
			using System.Collections.Generic;
			using System.Linq;
			{{string.Join("\r\n", TableModels.Select(item => $"using {item.Namespace};").Distinct()) }}

			namespace {{Namespace}}
			{
				public partial class {{DatabaseClassName}}Model
				{
					private {{DatabaseClassName}} dataSource;

			{{this.GenerateDatabaseModelConstructor().Indent(2)}}
			
			{{string.Join("\r\n", TableModels.Select(item=>item.GenerateDatabaseModelMethods())).Indent(2)}}
				}
			}
			""";

			return source;
		}
		public string GenerateDatabaseModelConstructor()
		{
			string source =
			$$"""
			public {{DatabaseClassName}}Model({{DatabaseClassName}} DataSource)
			{
				this.dataSource=DataSource;
			}
			""";

			return source;
		}


	}
}
